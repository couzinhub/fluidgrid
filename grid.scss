/*FluidGrid CSS Framework -- 
  Hubert Florin -- 
  couzin.hub@gmail.com -- 
  Copyright 2009 Hubert Florin -- 
  Built with SASS http://sass-lang.com/ */

  @import "variables.scss";


// Defining 1 column width
$col_width : (100 - (($grid - 1) * $gutter)) / $grid;

// Defining 1 column + 1 gutter width
$col_gut_width : $col_width + $gutter;
  
// Span number
$span : 1;

@while $span <= $grid {
  
  // Width of the first level spans
  .container_#{$grid} .span-#{$span} {
    width: (($col_gut_width * $span) - $gutter)#{"%"};
  }
  
  // Position of the grid columns
  .container_#{$grid} .grid_#{$grid} .col-#{$span} {
    left: (($col_gut_width * $span) - $col_gut_width)#{"%"};
  }
  $span: $span + 1;
}


///   $span : 1;
///   $subgrid :$grid - 1;
///   $coef : 100 / (($col_gut_width * $subgrid) - $gutter);
///   // Left and Margin right of Subgrids
///   
///   .left_margin_subgrid {
///     left:($coef * $gutter)#{"%"};
///     margin-right:($coef * $gutter)#{"%"};
///   }
///     
///   @while $span <= $grid {
///     .container_#{$grid} .span-#{$subgrid} .span-#{$span} {
///       @extend .left_margin_subgrid;
///     }
///     $span: $span + 1;
///   }



$cols :$grid - 1;
$coef : 100 / (($col_gut_width * $cols) - $gutter);

.stupid_test {
  left : $gutter * $coef#{"%"};
  margin-right : $gutter * $coef#{"%"};
}

@while $cols > 0 {
  .container_#{$grid} {
    .span-#{$cols} {


      //////////////////////////////////////////////////////////////////////
      // subcols margin and position
      $subcols : $cols - 1;
      @while $subcols > 0 {
        .span-#{$subcols} {
          @extend .stupid_test; // NOT WORKING
        }
        $subcols : $subcols - 1;
      }
      
      
      //////////////////////////////////////////////////////////////////////      
      // alpha and omage in sub columns
      .alpha, .omega {margin-right:0;}
      
            
      //////////////////////////////////////////////////////////////////////
      // sub columns
      $subcols:$cols;
      @while $subcols > 0 {
        .span-#{$subcols} {
          width : (($col_gut_width * $subcols) - $gutter) * $coef#{"%"};
        }
        $subcols : $subcols - 1;
      }
      
      
    }
  }
  $cols : $cols - 1 ;  
}



//////////////////////////////////////////////////////////////////////
//// Alpha and Omega Reset

$cols :$grid - 1;
.alpha_omega_holder {left:0;}
@while $cols > 0 {
  .container_#{$grid} .span-#{$cols} .alpha, .container_#{$grid} .span-#{$cols} .omega {
    @extend .alpha_omega_holder;
  }
  $cols : $cols - 1;
}



//////////////////////////////////////////////////////////////////////
// Default Left Position
$cols :$grid;
.default_left_pos {left:$gutter#{"%"};}
@while $cols > 0 {
    .container .container_#{$grid} .span-#{$cols} {
      @extend .default_left_pos;
    }
    $cols : $cols - 1;
}